apply plugin: 'java'
apply plugin: 'eclipse'
apply plugin: 'idea'
apply plugin: 'org.springframework.boot'
apply plugin: 'jacoco'

buildscript {
    repositories {
        mavenCentral()
    }
    dependencies {
        classpath("org.springframework.boot:spring-boot-gradle-plugin:1.4.2.RELEASE")
    }
}

repositories {
    mavenCentral()
}

configurations {
    provided
    compile.extendsFrom provided
}

sourceSets {
    main {
        compileClasspath += configurations.provided
        test.compileClasspath += configurations.provided
        test.runtimeClasspath += configurations.provided
    }
}

idea {
    module {
        scopes.PROVIDED.plus += [configurations.provided]
    }
}

jar {
    baseName = 'kaamelott-server'
    version =  '0.1-SNAPSHOT'
}

jacoco {
    toolVersion = "0.7.6.201602180812"
}

jacocoTestReport {
    reports {
        xml.enabled true
        csv.enabled false
        html.enabled false
    }
}

sourceCompatibility = 1.8
targetCompatibility = 1.8

ext {
    jsonpathVersion = "2.2.0"
}

dependencies {
    compile("org.springframework.boot:spring-boot-starter-data-rest")
    compile("org.springframework.boot:spring-boot-starter-data-jpa")
    compile("org.springframework.boot:spring-boot-starter-actuator")
    compile("org.springframework.boot:spring-boot-starter-batch")
    compile("org.springframework.data:spring-data-rest-hal-browser")

    // Development only
    compile("org.springframework.boot:spring-boot-devtools")

    // TODO Depends on active profile
    compile('org.postgresql:postgresql:9.4.1212')
    compile("com.h2database:h2")

    provided("org.projectlombok:lombok:1.16.8")

    testCompile("org.springframework.boot:spring-boot-starter-test")
    testCompile("com.jayway.jsonpath:json-path:$jsonpathVersion")
    testCompile("com.jayway.jsonpath:json-path-assert:$jsonpathVersion")
    testCompile("junit:junit")
}

task wrapper(type: Wrapper) {
    gradleVersion = '2.12'
}